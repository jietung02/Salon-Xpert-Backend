name: CICD

on:
  push:
    branch: [main]

jobs:
  build:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Login to docker hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }} 
      - name: Create .env with Github secrets
        run: |
          touch .env
          echo PORT=$PORT >> .env
          echo CLIENT_URI=$CLIENT_URI >> .env
          echo MANAGER_EMAIL=$MANAGER_EMAIL >> .env
          echo DATABASE_HOST=$DATABASE_HOST >> .env
          echo DATABASE_USER=$DATABASE_USER >> .env
          echo DATABASE_PASSWORD=$DATABASE_PASSWORD >> .env
          echo DATABASE_DATABASE=$DATABASE_DATABASE >> .env
          echo GOOGLE_PRIVATE_KEY=$GOOGLE_PRIVATE_KEY >> .env
          echo GOOGLE_CLIENT_EMAIL=$GOOGLE_CLIENT_EMAIL >> .env
          echo GOOGLE_PROJECT_NUMBER=$GOOGLE_PROJECT_NUMBER >> .env
          echo GOOGLE_SCOPES=$GOOGLE_SCOPES >> .env
          echo GOOGLE_NEW_CALENDAR_URI=$GOOGLE_NEW_CALENDAR_URI >> .env
          echo AWS_SES_ACCESS_KEY=$AWS_SES_ACCESS_KEY >> .env
          echo AWS_SES_SECRET_KEY=$AWS_SES_SECRET_KEY >> .env
          echo AWS_REGION=$AWS_REGION >> .env
          echo WORKING_HOUR=$WORKING_HOUR >> .env
          echo CLOSING_HOUR=$CLOSING_HOUR >> .env
          echo AGERANGE=$AGERANGE >> .env
          echo NODE_ENV=$NODE_ENV >> .env

        env:
          PORT: ${{secrets.PORT}}
          CLIENT_URI: ${{secrets.CLIENT_URI}}
          MANAGER_EMAIL: ${{secrets.MANAGER_EMAIL}}
          DATABASE_HOST: ${{secrets.DATABASE_HOST}}
          DATABASE_USER: ${{secrets.DATABASE_USER}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          DATABASE_DATABASE: ${{secrets.DATABASE_DATABASE}}
          GOOGLE_PRIVATE_KEY: ${{secrets.GOOGLE_PRIVATE_KEY}}
          GOOGLE_CLIENT_EMAIL: ${{secrets.GOOGLE_CLIENT_EMAIL}}
          GOOGLE_PROJECT_NUMBER: ${{secrets.GOOGLE_PROJECT_NUMBER}}
          GOOGLE_SCOPES: ${{secrets.GOOGLE_SCOPES}}
          GOOGLE_NEW_CALENDAR_URI: ${{secrets.GOOGLE_NEW_CALENDAR_URI}}
          AWS_SES_ACCESS_KEY: ${{secrets.AWS_SES_ACCESS_KEY}}
          AWS_SES_SECRET_KEY: ${{secrets.AWS_SES_SECRET_KEY}}
          AWS_REGION: ${{secrets.AWS_REGION}}
          WORKING_HOUR: ${{secrets.WORKING_HOUR}}
          CLOSING_HOUR: ${{secrets.CLOSING_HOUR}}
          AGERANGE: ${{secrets.AGERANGE}}
          NODE_ENV: ${{secrets.NODE_ENV}}
      - name: Build docker image
        run: docker build -t jietung02/nodejs-app .
      - name: Publish image to docker hub
        run: docker push jietung02/nodejs-app:latest
        
  deploy:
    needs: build
    runs-on: [self-hosted]
    steps:
      - name: Pull image from docker hub
        run: docker pull jietung02/nodejs-app:latest
      - name: Delete old container
        run: docker rm -f nodejs-app-container
      - name: Run docker container
        run: docker run -d -p 80:8000 --name nodejs-app-container jietung02/nodejs-app